.btn-group.bootstrap-select.my-.ng-untouched
    button.btn.dropdown-toggle.btn-default(type='button', data-toggle='dropdown',
            role='button', title='{{selected}}', aria-expanded='true', (click)="toggleOpen()")
        span.filter-option.pull-left {{selection}}
        span.bs-caret
            span.caret
    .dropdown-menu([class.open]="open", role='combobox', style='max-height: 394px; overflow: hidden; min-height: 0px;')

        .bs-searchbox(*ngIf="liveSearch")
            input.form-control([formControl]="query", type='text',
                autocomplete='off', role='textbox', aria-label='Search', placeholder="{{liveSearchPlaceholder}}")

        ul.dropdown-menu.inner(role='listbox', aria-expanded='true', style='max-height: 392px; overflow-y: auto; min-height: 0px;')

            li(*ngFor="let item of filteredItems; let idx = index", [attr.data-original-index]="idx", [class.selected]="item.selected", (click)="toggleItem(item)")
                a(tabindex='{{idx}}', style='', [attr.data-tokens]='null', role='option', [attr.aria-disabled]='item.disabled', [attr.aria-selected]='item.selected')
                    span.text {{item.title}}
                    span.zmdi.check-mark(class="{{tickIcon}}")

            li.no-results(*ngIf="emptySearch") {{ noneResultsText }} "{{ query.valueChanges | async }}"

    select.my-selectpicker(style='display: none', tabindex='-98', [class.mobile-device]="isMobile", [attr.multiple]="multiple")
        option(*ngFor="let item of filteredItems", value="{{item.id}}", [attr.selected]="item.selected ? true : null") {{item.title}}
